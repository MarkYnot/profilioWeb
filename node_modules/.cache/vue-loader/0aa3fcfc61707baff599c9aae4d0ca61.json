{"remainingRequest":"/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/internship/做过的项目/banvas/client/src/views/changePassword.vue?vue&type=template&id=fa872cf6&scoped=true&","dependencies":[{"path":"/Users/mark/Desktop/internship/做过的项目/banvas/client/src/views/changePassword.vue","mtime":1636547641000},{"path":"/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/internship/做过的项目/banvas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}