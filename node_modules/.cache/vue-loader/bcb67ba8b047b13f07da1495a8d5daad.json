{"remainingRequest":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/src/views/Registration.vue?vue&type=style&index=0&id=6106551a&lang=less&scoped=true&","dependencies":[{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/src/views/Registration.vue","mtime":1636647338000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Job hunting/做过的项目/profilio-web/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQoucmVnaXN0ZXJDb250YWluZXJ7DQogICAgd2lkdGg6IDEwMCU7DQoJICBoZWlnaHQ6IDEwMCU7DQoJICBwb3NpdGlvbjogYWJzb2x1dGU7DQoJICBsZWZ0OiA1MCU7DQoJICB0b3A6IDUwJTsNCgkgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7DQogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9hc3NldHMvYmFja2dyb3VuZC5qcGVnIik7DQogICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsNCiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7DQogICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsNCiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTsNCiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDE1JSA3NSUgMTAlIDsNCn0NCg0KLnRpdGxlew0KICBncmlkLXJvdzogMjsNCiAgZ3JpZC1jb2x1bW46IDE7DQogIGNvbG9yOndoaXRlOw0KICBmb250LXNpemU6IDR2dzsNCiAgbWFyZ2luLXRvcDogMjF2aDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIG1hcmdpbi1sZWZ0OiAxNHZ3Ow0KICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7DQogIHRleHQtYWxpZ246IGxlZnQ7DQogIA0KICANCn0NCi5sb2dpbi1mb3JtLWxheW91dCB7DQogIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi8NCiAgbGVmdDogMDsNCiAgcmlnaHQ6IDA7DQogIC8qIGhlaWdodDoxMDAlOyAqLw0KICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNzQpOw0KICB3aWR0aDogMzYwcHg7DQogIG1hcmdpbjogMTBweCBhdXRvOw0KICBib3JkZXItdG9wOiAxMHB4IHNvbGlkICM0MDllZmY7DQogICBncmlkLXJvdzogMS8zOw0KICAgZ3JpZC1jb2x1bW46IDI7DQogICBvdmVyZmxvdzogc2Nyb2xsOw0KICAgDQp9DQoubG9naW4tdGl0bGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoubG9naW4tY2VudGVyLWxheW91dCB7DQogIGJhY2tncm91bmQ6ICM0MDllZmY7DQogIHdpZHRoOiBhdXRvOw0KICBoZWlnaHQ6IGF1dG87DQogIG1heC13aWR0aDogMTAwJTsNCiAgbWF4LWhlaWdodDogMTAwJTsNCiAgbWFyZ2luLXRvcDogMjAwcHg7DQp9DQoubG9naW4tc3VidGl0bGV7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBtYXJnaW46IDBweCBhdXRvOw0KfQ0KICAuc2VlIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLnNlZSBpbWcgew0KICBtYXgtd2lkdGg6IDMwMHB4Ow0KICBtYXgtaGVpZ2h0OiAzNTBweDsNCn0NCg0KLmJhbnZhc3sNCiAgbWFyZ2luLWxlZnQ6IDEwdnc7DQogIG1hcmdpbi10b3A6OHZoOw0KICBncmlkLXJvdzogMTsNCiAgZ3JpZC1jb2x1bW46IDE7DQogIGNvbG9yOndoaXRlOw0KICBmb250LXNpemU6IDN2dzsNCiAgd2lkdGg6MjAlOw0KICBmb250LWZhbWlseTogJ1NlZ29lIFVJJywgVGFob21hLCBHZW5ldmEsIFZlcmRhbmEsIHNhbnMtc2VyaWY7DQp9DQoNCiNteUNhbnZhc3sNCiAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7DQogIGxlZnQ6MCUgIWltcG9ydGFudDsNCn0NCg0KL2RlZXAvIC5lbC1yYWRpb3sNCiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7DQp9DQoNCi9kZWVwLyAuZWwtcmFkaW9fX2lucHV0LmlzLWRpc2FibGVkK3NwYW4uZWwtcmFkaW9fX2xhYmVsew0KICAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["Registration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Registration.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"registerContainer\">\r\n\r\n     <img class=\"avantar\" v-lazy=\"'/static/banvasLogo.png'\" alt=\"avantar\"> &nbsp;&nbsp;<span class=\"banvas\">Banvas</span>\r\n       <span class=\"title\">Make Study Easier</span>\r\n    <el-card class=\"login-form-layout\">\r\n      <el-form\r\n        autocomplete=\"on\"\r\n        :model=\"loginForm\"\r\n        ref=\"loginForm\"\r\n        label-position=\"left\"\r\n      >\r\n        <div style=\"text-align: center\">\r\n          <svg-icon icon-class=\"login-mall\" style=\"width: 56px;height: 56px;color: #409EFF\"></svg-icon>\r\n        </div>\r\n        <h2 class=\"login-title color-main\">Welcome to register your banvas account</h2>\r\n        <el-form-item prop=\"username\">\r\n           <h4 class=\"login-subtitle\">  Creat your account:</h4>\r\n          <el-input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            v-model=\"loginForm.username\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"Account\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n        <h4 class=\"login-subtitle\">  Creat your password:</h4>\r\n          <el-input\r\n            name=\"password\"\r\n            :type=\"pwdType\"\r\n            v-model=\"loginForm.password\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"Password\"\r\n            show-password\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n           <el-form-item prop=\"name\">\r\n           <h4 class=\"login-subtitle\"> Your name:</h4>\r\n          <el-input\r\n               style=\"width: 48%;margin: 0px 12px 0px 0px;\"\r\n            name=\"age\"\r\n            type=\"text\"\r\n            v-model=\"loginForm.lastname\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"Last name\"\r\n          >\r\n                    </el-input>\r\n          <el-input\r\n          style=\"width: 48%\"\r\n            name=\"age\"\r\n            type=\"text\"\r\n            v-model=\"loginForm.firstname\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"First name\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n   <el-form-item prop=\"userage\">\r\n           <h4 class=\"login-subtitle\"> Detect your age:</h4>\r\n          <el-input\r\n          :disabled=\"able\"\r\n            name=\"age\"\r\n            type=\"text\"\r\n            v-model=\"loginForm.age\"\r\n            autocomplete=\"on\"\r\n            placeholder=\"Age\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n         <el-form-item prop=\"usergender\">\r\n           <h4 class=\"login-subtitle\"> Detect your gender:</h4>\r\n          <template>\r\n  <el-radio :disabled=\"able\" v-model=\"loginForm.radio\" label=\"male\">Male</el-radio>\r\n  <el-radio :disabled=\"able\" v-model=\"loginForm.radio\" label=\"female\">Female</el-radio>\r\n            <span slot=\"prefix\">\r\n              <svg-icon icon-class=\"user\" class=\"color-main\"></svg-icon>\r\n            </span>\r\n    </template>\r\n        </el-form-item>\r\n                    <h4 class=\"login-subtitle\">Upload your selfie(Age/Gender)</h4>\r\n    <input\r\n          type=\"file\"\r\n          accept=\"image/png, image/jpeg\"\r\n          @change=\"fnChange($event)\"\r\n          id= \"file\" \r\n           style= \"display:none\"\r\n        />\r\n\r\n<input type= \"button\" value=\"Browser\"  onclick= \"document.getElementById('file').click()\"/>\r\n\r\n    <h3>Picture</h3>\r\n    <div class=\"see\">\r\n      <img id=\"myImg\" src=\"../assets/logo.png\" />\r\n      <canvas id=\"myCanvas\" style=\"position:fixed; left:44.2%; \"/>\r\n    </div>\r\n        <el-form-item >\r\n          <el-button\r\n            style=\"width: 100%\"\r\n            type=\"primary\"\r\n            :loading=\"loading\"\r\n            @click.native.prevent=\"handleregister\"\r\n          >Regist</el-button>\r\n        </el-form-item>\r\n                  <el-form-item >\r\n          <el-button\r\n            style=\"width: 50%\"\r\n            type=\"text\"\r\n            :loading=\"loading\"\r\n            @click.native.prevent=\"tologin\"\r\n          >Already have an account?  Login</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as faceapi from \"face-api.js\";\r\nimport { MessageBox } from 'element-ui';\r\nimport { Message } from 'element-ui';\r\nimport userService from '../services/userService';\r\nexport default {\r\n  name: \"Registration\",\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        age:\"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        radio:\"\"\r\n      },\r\n      loading: false,\r\n      pwdType: \"password\",\r\n      imageUrl: '',\r\n      nets: \"ssdMobilenetv1\", // 模型\r\n      options: null, // 模型参数\r\n      withBoxes: true, // 边框or轮廓\r\n      imgEl: null,\r\n      canvasEl: null,\r\n      able: true,\r\n      finished: false,\r\n      state: false,\r\n      avatarUrl:\"\",\r\n      selectedFile:\"\",\r\n      selectedFileList:[],\r\n    };\r\n  },\r\n  watch: {\r\n    nets(val) {\r\n      this.nets = val;\r\n      this.fnInit().then(() => this.fnRun());\r\n    },\r\n    withBoxes(val) {\r\n      this.withBoxes = val;\r\n      this.fnRun();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.fnInit().then(() => this.fnRun());\r\n    });\r\n  },\r\n  methods: {\r\n    showPwd() {\r\n      if (this.pwdType === \"password\") {\r\n        this.pwdType = \"\";\r\n      } else {\r\n        this.pwdType = \"password\";\r\n      }\r\n    },\r\n    tologin(){\r\n                    this.$router.push({\r\n                  path: \"/login\"\r\n                });\r\n    },\r\n\r\n    handleBeforeUpload(){\r\n       console.log(1)\r\n    },\r\n   async handleregister(){\r\n        this.loading=true;\r\n        if(this.loginForm.username==\"\"||this.loginForm.password==\"\"||this.loginForm.age==\"\"||this.loginForm.lastname==\"\"||this.loginForm.firstname==\"\"||this.loginForm.radio==\"\"){\r\n        alert(\"Register infomation cannot be empty!\")\r\n        this.loading=false;\r\n        }\r\n        else{\r\n          this.state=await userService.checkemail(this.loginForm.username);\r\n          if(this.state.data==true){\r\n               console.log(1)\r\n              this.state=false;\r\n              this.loading=false;\r\n              return alert(\"Email already exist!\")\r\n          }else{\r\n                MessageBox.confirm('Are you confirm to regiter?', 'Notice', {\r\n                confirmButtonText: 'Confirm',\r\n                cancelButtonText: 'Reject',\r\n                type: 'warning'\r\n              }).then(async ()=>{\r\n                      this.state=true;\r\n                      Message({\r\n                        type: 'success',\r\n                        message: 'Success!',\r\n                      });\r\n              console.log(this.loginForm.gender)\r\n               const result = await userService.Registration(this.loginForm.username,this.$md5(this.loginForm.password),this.loginForm.lastname,this.loginForm.firstname,this.loginForm.age,this.loginForm.radio,this.avatarUrl)\r\n               this.$router.push({path: \"/login\"});\r\n               \r\n                 \r\n                   \r\n              }).catch(() => {\r\n                Message({\r\n                  type: 'info',\r\n                  message: 'Canceled'\r\n                }); \r\n                this.loading=false;         \r\n              });\r\n              if(this.state==true){\r\n                console.log(1)\r\n                  \r\n              }\r\n        }}\r\n          this.loading=false;\r\n    },\r\n\r\n\r\n           getBase64(img, callback) {\r\n          const reader = new FileReader();\r\n           reader.readAsDataURL(img);\r\n           console.log(reader)\r\n           reader.onload = ()=> callback(reader.result)\r\n     },\r\n\r\n\r\n    async fnInit() {\r\n      await faceapi.nets[this.nets].loadFromUri(\"/models\");\r\n      await faceapi.loadFaceLandmarkModel(\"/models\");\r\n      await faceapi.loadAgeGenderModel(\"/models\");\r\n      // 根据模型参数识别调整结果\r\n      switch (this.nets) {\r\n        case \"ssdMobilenetv1\":\r\n          this.options = new faceapi.SsdMobilenetv1Options({\r\n            minConfidence: 0.5, // 0.1 ~ 0.9\r\n          });\r\n          break;\r\n        case \"tinyFaceDetector\":\r\n          this.options = new faceapi.TinyFaceDetectorOptions({\r\n            inputSize: 512, // 160 224 320 416 512 608\r\n            scoreThreshold: 0.5, // 0.1 ~ 0.9\r\n          });\r\n          break;\r\n        case \"mtcnn\":\r\n          this.options = new faceapi.MtcnnOptions({\r\n            minFaceSize: 20, // 1 ~ 20\r\n            scaleFactor: 0.709, // 0.1 ~ 0.9\r\n          });\r\n          break;\r\n      }\r\n      // 节点属性化\r\n      this.imgEl = document.getElementById(\"myImg\");\r\n      this.canvasEl = document.getElementById(\"myCanvas\");\r\n    },\r\n    // 执行识别匹配图片\r\n    async fnRun() {\r\n      // 识别绘制人脸信息\r\n      const results = await faceapi\r\n        .detectAllFaces(this.imgEl, this.options)\r\n        .withFaceLandmarks()\r\n        .withAgeAndGender();\r\n      faceapi.matchDimensions(this.canvasEl, this.imgEl);\r\n      const resizedResults = faceapi.resizeResults(results, this.imgEl);\r\n      resizedResults.forEach((result) => {\r\n        const {age, gender, genderProbability } = result;\r\n        this.loginForm.age=Math.round(age, 0);\r\n        if(gender==\"male\")\r\n        this.loginForm.radio=\"male\";\r\n        else\r\n        this.loginForm.radio=\"female\";\r\n        this.able=false;\r\n        new faceapi.draw.DrawTextField(\r\n          [\r\n            `${Math.round(age, 0)} years`,\r\n            `${gender} (${Math.round(genderProbability)})`,\r\n          ],\r\n          result.detection.box.bottomLeft\r\n        ).draw(this.canvasEl);\r\n      });\r\n      this.withBoxes\r\n        ? faceapi.draw.drawDetections(this.canvasEl, resizedResults)\r\n        : faceapi.draw.drawFaceLandmarks(this.canvasEl, resizedResults);\r\n    },\r\n    //更换匹配图\r\n    fnChange(e) {    \r\n       const nextState = {};\r\n      if (!e.target.files.length) return;\r\n      // 将文件显示为图像并识别\r\n      faceapi.bufferToImage(e.target.files[0]).then((img) => {\r\n        this.imgEl.src = img.src;\r\n        this.canvasEl\r\n          .getContext(\"2d\")\r\n          .clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n        this.fnRun();\r\n\r\n             nextState.selectedFile = e.target.files[0];\r\n            nextState.selectedFileList = [e.target.files[0]];\r\n            this.getBase64(e.target.files[0], imageUrl =>{\r\n                    this.avatarUrl = imageUrl\r\n            }); \r\n\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n.registerContainer{\r\n    width: 100%;\r\n\t  height: 100%;\r\n\t  position: absolute;\r\n\t  left: 50%;\r\n\t  top: 50%;\r\n\t  transform: translate(-50%,-50%);\r\n    background-image: url(\"../assets/background.jpeg\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    display: grid;\r\n    grid-template-columns: 50% 50%;\r\n    grid-template-rows: 15% 75% 10% ;\r\n}\r\n\r\n.title{\r\n  grid-row: 2;\r\n  grid-column: 1;\r\n  color:white;\r\n  font-size: 4vw;\r\n  margin-top: 21vh;\r\n  font-weight: bold;\r\n  margin-left: 14vw;\r\n  word-wrap: break-word;\r\n  text-align: left;\r\n  \r\n  \r\n}\r\n.login-form-layout {\r\n  /* position: absolute; */\r\n  left: 0;\r\n  right: 0;\r\n  /* height:100%; */\r\n  background: rgba(255, 255, 255, 0.74);\r\n  width: 360px;\r\n  margin: 10px auto;\r\n  border-top: 10px solid #409eff;\r\n   grid-row: 1/3;\r\n   grid-column: 2;\r\n   overflow: scroll;\r\n   \r\n}\r\n.login-title {\r\n  text-align: center;\r\n}\r\n.login-center-layout {\r\n  background: #409eff;\r\n  width: auto;\r\n  height: auto;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  margin-top: 200px;\r\n}\r\n.login-subtitle{\r\n    text-align: left;\r\n    margin: 0px auto;\r\n}\r\n  .see {\r\n  position: relative;\r\n}\r\n.see img {\r\n  max-width: 300px;\r\n  max-height: 350px;\r\n}\r\n\r\n.banvas{\r\n  margin-left: 10vw;\r\n  margin-top:8vh;\r\n  grid-row: 1;\r\n  grid-column: 1;\r\n  color:white;\r\n  font-size: 3vw;\r\n  width:20%;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n#myCanvas{\r\n  position: absolute !important;\r\n  left:0% !important;\r\n}\r\n\r\n/deep/ .el-radio{\r\n  color: black !important;\r\n}\r\n\r\n/deep/ .el-radio__input.is-disabled+span.el-radio__label{\r\n   color: black !important;\r\n}\r\n</style>\r\n"]}]}