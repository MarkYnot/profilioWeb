{"remainingRequest":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/src/components/codeBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/src/components/codeBlock.vue","mtime":1689526089505},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/cache-loader/dist/cjs.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/babel-loader/lib/index.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/cache-loader/dist/cjs.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/vue-loader/lib/index.js","mtime":1688868126000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgJ3ByaXNtanMnOw0KaW1wb3J0ICdwcmlzbWpzL3RoZW1lcy9wcmlzbS5jc3MnOw0KLy8gaW1wb3J0ICdwcmlzbWpzL3RoZW1lcy9wcmlzbS1qc29uJzsNCi8vIGltcG9ydCAncHJpc21qcy90aGVtZXMvcHJpc20tamF2YSc7DQppbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1qYXZhc2NyaXB0JzsNCmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLW1hcmt1cCc7DQppbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1jc3MnOw0KaW1wb3J0ICdwcmlzbWpzL3BsdWdpbnMvbGluZS1udW1iZXJzL3ByaXNtLWxpbmUtbnVtYmVycyc7DQoNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgLy8gICBjb2RlOiBgIHN0YXJ0U2VhcmNoKCl7DQogICAgLy8gICAgIHRoaXMuc2VhcmNoID0gIXRoaXMuc2VhcmNoOw0KICAgIC8vICAgICBpZih0aGlzLnJlc3VsdFJldHVybil7DQogICAgLy8gICAgICAgdGhpcy5wb3B1bGFyID0gZmFsc2U7DQogICAgLy8gICAgIH1lbHNlIHRoaXMucG9wdWxhciA9IHRydWU7DQogICAgLy8gICAgIHRoaXMudGV4dCA9IGZhbHNlOw0KICAgIC8vICAgICB0aGlzLkVjb21tZXJjZSA9IGZhbHNlOw0KICAgIC8vIH0sDQoNCiAgICAvLyAvL21ldGhvZHMNCiAgICAvLyBzZWFyY2hpbmcoZXZlbnQpew0KICAgIC8vICAgICB0aGlzLnplcm9SZXN1bHQgPSBmYWxzZTsNCiAgICAgIA0KICAgICAgICANCiAgICAvLyAgICAgaWYoIWV2ZW50LnRhcmdldC52YWx1ZSl7DQogICAgLy8gICAgICAgdGhpcy5wb3B1bGFyID0gdHJ1ZTsNCiAgICAvLyAgICAgICB0aGlzLnNwaW5uZXIgPSBmYWxzZTsgIA0KICAgIC8vICAgICAgIHRoaXMucmVzdWx0UmV0dXJuID0gZmFsc2U7DQogICAgLy8gICAgICAgcmV0dXJuDQogICAgLy8gICAgIH0NCiAgICAvLyAgICAgdGhpcy5yZXN1bHRSZXR1cm4gPSBmYWxzZTsNCiAgICAvLyAgICAgdGhpcy5zcGlubmVyID0gdHJ1ZTsNCiAgICAvLyAgICAgdGhpcy5wb3B1bGFyID0gZmFsc2U7DQoNCiAgICAvLyAgICAgbGV0IHJlZyA9IG5ldyBSZWdFeHAoZXZlbnQudGFyZ2V0LnZhbHVlKQ0KICAgIC8vICAgICBsZXQgcmVzdWx0U2V0ID0gW10NCiAgICAgICAgDQogICAgLy8gICAgIHRoaXMucHJvamVjdExpc3QuZm9yRWFjaChpdGVtPT57DQogICAgLy8gICAgICAgICBpZihyZWcudGVzdChpdGVtLm5hbWUpKXsNCiAgICAvLyAgICAgICAgICAgcmVzdWx0U2V0LnB1c2goaXRlbSkNCiAgICAvLyAgICAgICAgIH0NCiAgICAvLyAgICAgfSlgLA0KICAgICAgY29kZUxpbmVzOiBbXSwNCiAgICAgIGlzQ29waWVkOiBmYWxzZSwNCiAgICAgIGNvcHlCdXR0b25UZXh0OiAnQ29weScsDQogICAgfTsNCiAgfSwNCg0KICAgIHByb3BzOiB7DQogICAgY29kZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgfSwNCiAgICBsYW5ndWFnZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ2phdmFzY3JpcHQnLA0KICAgIH0sDQogIH0sDQoNCiAgbW91bnRlZCgpIHsNCiAgICAvLyBQcmlzbS5oaWdobGlnaHRBbGwoKTsNCiAgICB0aGlzLmNvZGVMaW5lcyA9IHRoaXMuY29kZS5zcGxpdCgnXG4nKTsNCiAgICBjb25zb2xlLmxvZyh0aGlzLmNvZGVMaW5lcykNCiAgICAgIA0KICB9LA0KDQogY29tcHV0ZWQ6IHsNCiAgICBoaWdobGlnaHRlZENvZGUoKSB7DQogICAgICAvLyBVc2UgUHJpc20uaGlnaGxpZ2h0IHdpdGggdGhlIGxpbmUtbnVtYmVycyBwbHVnaW4gdG8gZ2VuZXJhdGUgdGhlIGNvZGUgd2l0aCBsaW5lIG51bWJlcnMNCiAgICAgIHJldHVybiBQcmlzbS5oaWdobGlnaHQodGhpcy5jb2RlLCBQcmlzbS5sYW5ndWFnZXNbdGhpcy5sYW5ndWFnZV0sIHRoaXMubGFuZ3VhZ2UpICsgJ1xuJzsNCiAgICB9LA0KICB9LA0KICANCiAgDQogIG1ldGhvZHM6IHsNCiAgICBjb3B5Q29kZSgpIHsNCiAgICAgICAgY29uc3QgY29kZUJsb2NrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvZGVCbG9jaycpOw0KICAgICAgICAvLyBjb25zdCBjb2RlTGluZXMgPSBBcnJheS5mcm9tKGNvZGVCbG9jay5xdWVyeVNlbGVjdG9yQWxsKCcuY29kZS1saW5lJykpOw0KICAgICAgICBjb25zdCB0ZW1wQ29kZUJsb2NrID0gY29kZUJsb2NrLmNsb25lTm9kZSh0cnVlKTsNCg0KICAgICAgICAvLyBSZW1vdmUgbGluZSBudW1iZXJzIGZyb20gdGhlIGNsb25lZCBjb2RlIGJsb2NrDQogICAgICAgIGNvbnN0IGxpbmVOdW1iZXJzID0gQXJyYXkuZnJvbSh0ZW1wQ29kZUJsb2NrLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xpbmUtbm8nKSk7DQogICAgICAgIGxpbmVOdW1iZXJzLmZvckVhY2gobGluZU51bWJlciA9PiBsaW5lTnVtYmVyLnJlbW92ZSgnbGluZS1ubycpKTsNCiAgICAgIGNvbnN0IGNvZGVXaXRob3V0TGluZU51bWJlcnMgPSB0ZW1wQ29kZUJsb2NrLmlubmVyVGV4dDsNCiAgICAgIGNvbnN0IG5vcm1hbGl6ZWRDb2RlID0gY29kZVdpdGhvdXRMaW5lTnVtYmVycy5yZXBsYWNlKC9eXHMrL2dtLCAnJyk7DQoNCg0KICAgICAgICAgIGNvbnNvbGUubG9nKG5vcm1hbGl6ZWRDb2RlKQ0KDQogIA0KICAgICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChub3JtYWxpemVkQ29kZSkNCiAgICAgICAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgdGhpcy5pc0NvcGllZCA9IHRydWU7DQogICAgICAgICAgICAgIHRoaXMuY29weUJ1dHRvblRleHQgPSAnQ29waWVkJzsNCg0KICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzQ29waWVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgdGhpcy5jb3B5QnV0dG9uVGV4dCA9ICdDb3B5JzsNCiAgICAgICAgICAgICAgfSwgMjAwMCk7DQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGNvcHkgdGhlIGNvZGU6JywgZXJyb3IpOw0KICAgICAgICAgICAgfSk7DQogICAgfSwNCg0KDQogICAgIGhpZ2hsaWdodFN5bnRheChsaW5lKSB7DQogICAgICAgY29uc3QgbGFuZ3VhZ2UgPSBQcmlzbS5sYW5ndWFnZXNbdGhpcy5sYW5ndWFnZV0NCiAgICAgICByZXR1cm4gUHJpc20uaGlnaGxpZ2h0KGxpbmUsIGxhbmd1YWdlLCB0aGlzLmxhbmd1YWdlKTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["codeBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"codeBlock.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"code-container\">\r\n    <pre class=\"code-editor\">\r\n      <!-- class=\"language-javascript\" -->\r\n      <div id=\"codeBlock\" :class=\"[`language-${language}`]\" >\r\n        <!-- <div class=\"code-lines-wrapper\"> -->\r\n          <div v-for=\"(line,index) in codeLines\" :key=\"line\" class=\"code-line\">\r\n            <div class=\"line-no\">{{ index + 1 }}</div>\r\n            <span class=\"functionCode\" v-html=\"highlightSyntax(line)\"></span>\r\n          </div>\r\n        <!-- </div> -->\r\n      </div>\r\n    </pre>\r\n    <button @click=\"copyCode\" :disabled=\"isCopied\" class=\"copy-button\">{{ copyButtonText }}</button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport 'prismjs';\r\nimport 'prismjs/themes/prism.css';\r\n// import 'prismjs/themes/prism-json';\r\n// import 'prismjs/themes/prism-java';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n    //   code: ` startSearch(){\r\n    //     this.search = !this.search;\r\n    //     if(this.resultReturn){\r\n    //       this.popular = false;\r\n    //     }else this.popular = true;\r\n    //     this.text = false;\r\n    //     this.Ecommerce = false;\r\n    // },\r\n\r\n    // //methods\r\n    // searching(event){\r\n    //     this.zeroResult = false;\r\n      \r\n        \r\n    //     if(!event.target.value){\r\n    //       this.popular = true;\r\n    //       this.spinner = false;  \r\n    //       this.resultReturn = false;\r\n    //       return\r\n    //     }\r\n    //     this.resultReturn = false;\r\n    //     this.spinner = true;\r\n    //     this.popular = false;\r\n\r\n    //     let reg = new RegExp(event.target.value)\r\n    //     let resultSet = []\r\n        \r\n    //     this.projectList.forEach(item=>{\r\n    //         if(reg.test(item.name)){\r\n    //           resultSet.push(item)\r\n    //         }\r\n    //     })`,\r\n      codeLines: [],\r\n      isCopied: false,\r\n      copyButtonText: 'Copy',\r\n    };\r\n  },\r\n\r\n    props: {\r\n    code: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    language: {\r\n      type: String,\r\n      default: 'javascript',\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // Prism.highlightAll();\r\n    this.codeLines = this.code.split('\\n');\r\n    console.log(this.codeLines)\r\n      \r\n  },\r\n\r\n computed: {\r\n    highlightedCode() {\r\n      // Use Prism.highlight with the line-numbers plugin to generate the code with line numbers\r\n      return Prism.highlight(this.code, Prism.languages[this.language], this.language) + '\\n';\r\n    },\r\n  },\r\n  \r\n  \r\n  methods: {\r\n    copyCode() {\r\n        const codeBlock = document.getElementById('codeBlock');\r\n        // const codeLines = Array.from(codeBlock.querySelectorAll('.code-line'));\r\n        const tempCodeBlock = codeBlock.cloneNode(true);\r\n\r\n        // Remove line numbers from the cloned code block\r\n        const lineNumbers = Array.from(tempCodeBlock.getElementsByClassName('line-no'));\r\n        lineNumbers.forEach(lineNumber => lineNumber.remove('line-no'));\r\n      const codeWithoutLineNumbers = tempCodeBlock.innerText;\r\n      const normalizedCode = codeWithoutLineNumbers.replace(/^\\s+/gm, '');\r\n\r\n\r\n          console.log(normalizedCode)\r\n\r\n  \r\n        navigator.clipboard.writeText(normalizedCode)\r\n            .then(() => {\r\n              this.isCopied = true;\r\n              this.copyButtonText = 'Copied';\r\n\r\n              setTimeout(() => {\r\n                this.isCopied = false;\r\n                this.copyButtonText = 'Copy';\r\n              }, 2000);\r\n            })\r\n            .catch(error => {\r\n              console.error('Failed to copy the code:', error);\r\n            });\r\n    },\r\n\r\n\r\n     highlightSyntax(line) {\r\n       const language = Prism.languages[this.language]\r\n       return Prism.highlight(line, language, this.language);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.code-container {\r\n  position: relative;\r\n}\r\n\r\n.code-editor {\r\n  position: relative;\r\n  background-color: rgb(30, 29, 29);\r\n  /* color: red; */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  /* text-shadow: none !important; */\r\n  // font-family: 'Courier New', Courier, monospace;\r\n  font-size: 13px;\r\n  overflow: scroll;\r\n  line-height: 1.4;\r\n}\r\n\r\n.code-lines-wrapper {\r\n  position: relative;\r\n}\r\n\r\n.code-line {\r\n  display: grid;\r\n  grid-template-columns: 10px 300px;\r\n  position: relative;\r\n  height: 15px;\r\n  width: 100%;\r\n  margin-top:2px;\r\n}\r\n\r\n.code-line span {\r\n  text-shadow: none !important;\r\n}\r\n\r\n/deep/ .token.operator{\r\n  background: transparent !important;\r\n   color: rgba(224, 224, 158, 0.658);\r\n}\r\n\r\n.functionCode{\r\n  grid-column: 2;\r\n  color: rgb(224, 224, 158);\r\n  text-align: left;\r\n}\r\n\r\n.line-no {\r\n  grid-column: 1;\r\n  width: 2.5em;\r\n  text-align: left;\r\n  color: #757575;\r\n  font-size: 13px;\r\n  top: 0px;\r\n  user-select: none !important;\r\n  -moz-user-select:none;  \r\n  -webkit-user-select:none; \r\n  -ms-user-select:none; \r\n  -khtml-user-select:none; \r\n  -o-user-select:none; \r\n}\r\n\r\n.copy-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #6272a4;\r\n  color: #f8f8f2;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 14px;\r\n}\r\n</style>"]}]}