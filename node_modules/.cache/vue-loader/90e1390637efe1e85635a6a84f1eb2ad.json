{"remainingRequest":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/src/components/codeBlock.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/src/components/codeBlock.vue","mtime":1689566107646},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/cache-loader/dist/cjs.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/babel-loader/lib/index.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/cache-loader/dist/cjs.js","mtime":1688868126000},{"path":"/Users/mark/Desktop/Job-hunting/做过的项目/profilio-web/node_modules/vue-loader/lib/index.js","mtime":1688868126000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgJ3ByaXNtanMnOw0KaW1wb3J0ICdwcmlzbWpzL3RoZW1lcy9wcmlzbS5jc3MnOw0KLy8gaW1wb3J0ICdwcmlzbWpzL3RoZW1lcy9wcmlzbS1qYXZhJzsNCmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWphdmFzY3JpcHQnOw0KaW1wb3J0ICdwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tbWFya3VwJzsNCmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNzcyc7DQppbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1qc29uJzsNCmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWphdmEnOw0KaW1wb3J0ICdwcmlzbWpzL3BsdWdpbnMvbGluZS1udW1iZXJzL3ByaXNtLWxpbmUtbnVtYmVycyc7DQoNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjb2RlTGluZXM6IFtdLA0KICAgICAgaXNDb3BpZWQ6IGZhbHNlLA0KICAgICAgY29weUJ1dHRvblRleHQ6ICdDb3B5JywNCiAgICB9Ow0KICB9LA0KDQogICAgcHJvcHM6IHsNCiAgICBjb2RlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICB9LA0KICAgIGxhbmd1YWdlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnamF2YXNjcmlwdCcsDQogICAgfSwNCiAgfSwNCg0KICBtb3VudGVkKCkgew0KICAgIC8vIFByaXNtLmhpZ2hsaWdodEFsbCgpOw0KICAgIHRoaXMuY29kZUxpbmVzID0gdGhpcy5jb2RlLnNwbGl0KCdcbicpOw0KICAgIGNvbnNvbGUubG9nKHRoaXMuY29kZUxpbmVzKQ0KICAgIGNvbnN0IGxpbmVObyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xpbmUtbm8nKTsNCiAgICBsaW5lTm8uZm9yRWFjaChpdGVtID0+IGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY29weScsIHRoaXMuaGFuZGxlQ29weSkpDQogIA0KICB9LA0KDQoNCiAgYmVmb3JlRGVzdHJveSgpew0KICAgIGNvbnN0IGxpbmVObyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xpbmUtbm8nKTsNCiAgICBsaW5lTm8uZm9yRWFjaChpdGVtID0+IGl0ZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY29weScsIHRoaXMuaGFuZGxlQ29weSkpDQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIGNvcHlDb2RlKCkgew0KICAgICAgICBjb25zdCBjb2RlQ29udGVudCA9IHRoaXMuY29kZUxpbmVzLmpvaW4oJ1xuJyk7DQogICAgICAgICAgY29uc29sZS5sb2coY29kZUNvbnRlbnQpDQoNCiAgDQogICAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGNvZGVDb250ZW50KQ0KICAgICAgICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICAgICAgICB0aGlzLmlzQ29waWVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgdGhpcy5jb3B5QnV0dG9uVGV4dCA9ICdDb3BpZWQnOw0KDQogICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuaXNDb3BpZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICB0aGlzLmNvcHlCdXR0b25UZXh0ID0gJ0NvcHknOw0KICAgICAgICAgICAgICB9LCAyMDAwKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY29weSB0aGUgY29kZTonLCBlcnJvcik7DQogICAgICAgICAgICB9KTsNCiAgICB9LA0KDQogICAgaGFuZGxlQ29weShldmVudCl7DQogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQogICAgfSwNCg0KDQogICAgIGhpZ2hsaWdodFN5bnRheChsaW5lKSB7DQogICAgICAgY29uc3QgbGFuZ3VhZ2UgPSBQcmlzbS5sYW5ndWFnZXNbdGhpcy5sYW5ndWFnZV0NCiAgICAgICByZXR1cm4gUHJpc20uaGlnaGxpZ2h0KGxpbmUsIGxhbmd1YWdlLCB0aGlzLmxhbmd1YWdlKTsNCiAgICB9LA0KICB9LA0KfTsNCg=="},{"version":3,"sources":["codeBlock.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"codeBlock.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"code-container\">\r\n    <pre class=\"code-editor\">\r\n      <!-- class=\"language-javascript\" -->\r\n      <div id=\"codeBlock\" :class=\"[`language-${language}`]\" >\r\n        <!-- <div class=\"code-lines-wrapper\"> -->\r\n          <div v-for=\"(line,index) in codeLines\" :key=\"index\" class=\"code-line\">\r\n            <div class=\"line-no\">{{ index + 1 }}</div>\r\n            <span class=\"functionCode\" v-html=\"highlightSyntax(line)\"></span>\r\n          </div>\r\n        <!-- </div> -->\r\n      </div>\r\n    </pre>\r\n    <button @click=\"copyCode\" :disabled=\"isCopied\" class=\"copy-button\">{{ copyButtonText }}</button>\r\n    <button class=\"language-button\" disabled>{{ this.language=='markup'? 'html':this.language }}</button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport 'prismjs';\r\nimport 'prismjs/themes/prism.css';\r\n// import 'prismjs/themes/prism-java';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-json';\r\nimport 'prismjs/components/prism-java';\r\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      codeLines: [],\r\n      isCopied: false,\r\n      copyButtonText: 'Copy',\r\n    };\r\n  },\r\n\r\n    props: {\r\n    code: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    language: {\r\n      type: String,\r\n      default: 'javascript',\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // Prism.highlightAll();\r\n    this.codeLines = this.code.split('\\n');\r\n    console.log(this.codeLines)\r\n    const lineNo = document.getElementsByClassName('line-no');\r\n    lineNo.forEach(item => item.addEventListener('copy', this.handleCopy))\r\n  \r\n  },\r\n\r\n\r\n  beforeDestroy(){\r\n    const lineNo = document.getElementsByClassName('line-no');\r\n    lineNo.forEach(item => item.removeEventListener('copy', this.handleCopy))\r\n  },\r\n\r\n  methods: {\r\n    copyCode() {\r\n        const codeContent = this.codeLines.join('\\n');\r\n          console.log(codeContent)\r\n\r\n  \r\n        navigator.clipboard.writeText(codeContent)\r\n            .then(() => {\r\n              this.isCopied = true;\r\n              this.copyButtonText = 'Copied';\r\n\r\n              setTimeout(() => {\r\n                this.isCopied = false;\r\n                this.copyButtonText = 'Copy';\r\n              }, 2000);\r\n            })\r\n            .catch(error => {\r\n              console.error('Failed to copy the code:', error);\r\n            });\r\n    },\r\n\r\n    handleCopy(event){\r\n        event.preventDefault();\r\n    },\r\n\r\n\r\n     highlightSyntax(line) {\r\n       const language = Prism.languages[this.language]\r\n       return Prism.highlight(line, language, this.language);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.code-container {\r\n  position: relative;\r\n}\r\n\r\n.code-editor {\r\n  position: relative;\r\n  background-color: rgb(30, 29, 29);\r\n  /* color: red; */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  /* text-shadow: none !important; */\r\n  // font-family: 'Courier New', Courier, monospace;\r\n  font-size: 13px;\r\n  overflow-x: scroll;\r\n  line-height: 1.4;\r\n}\r\n\r\n#codeBlock {\r\n  display:grid;\r\n  align-items: start;\r\n  vertical-align: top !important;\r\n}\r\n\r\n.code-lines-wrapper {\r\n  position: relative;\r\n}\r\n\r\n.code-line {\r\n  display: grid;\r\n  grid-template-columns: 18px 300px;\r\n  position: relative;\r\n  height: 15px;\r\n  width: 100%;\r\n  margin-top:2px;\r\n}\r\n\r\n.code-line span {\r\n  text-shadow: none !important;\r\n  font-size: 10px;\r\n}\r\n\r\n/deep/ .token.operator{\r\n  background: transparent !important;\r\n   color: rgba(224, 224, 158, 0.658);\r\n}\r\n\r\n.functionCode{\r\n  grid-column: 2;\r\n  color: rgb(224, 224, 158);\r\n  text-align: left;\r\n}\r\n\r\n.line-no {\r\n  grid-column: 1;\r\n  width: 2.5em;\r\n  text-align: left;\r\n  color: #757575;\r\n  font-size: 10px;\r\n  top: 0px;\r\n  user-select: none !important;\r\n  -moz-user-select:none;  \r\n  -webkit-user-select:none; \r\n  -ms-user-select:none; \r\n  -khtml-user-select:none; \r\n  -o-user-select:none; \r\n  pointer-events: none;\r\n}\r\n\r\n.line-no::selection {\r\n  background-color: transparent;\r\n}\r\n\r\n\r\n.copy-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  padding: 5px 10px;\r\n  background-color: white;\r\n  color: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 10px;\r\n}\r\n\r\n.language-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 5px 10px;\r\n  background-color: white;\r\n  color: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 10px;\r\n  text-transform: uppercase\r\n}\r\n</style>"]}]}