{"remainingRequest":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/src/views/game.vue?vue&type=template&id=323a520c&scoped=true&","dependencies":[{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/src/views/game.vue","mtime":1636647592294},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}