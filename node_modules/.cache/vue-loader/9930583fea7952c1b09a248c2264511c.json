{"remainingRequest":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/src/views/game2.vue?vue&type=template&id=152798d6&scoped=true&","dependencies":[{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/src/views/game2.vue","mtime":1636647621458},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mark/Desktop/Master/modeling-base software engineering/banvas/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}